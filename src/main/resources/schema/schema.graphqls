type Query {
    me: User!
    problemzLatest: [Problem!]
    search(filter: SearchInput): [Searchable]
    problemDetail(id: ID!): Problem!
}

type Mutation {
    createUser(user: UserCreateInput): UserResponse!
    userLogin(user: UserLoginInput): UserResponse!
    userActivation(userActivation: UserActivationInput): UserActivationResponse!
    createProblem(problem: ProblemInput): ProblemResponse!
    createSolution(solution: SolutionInput): SolutionResponse!
    voteSolution(vote: SolutionVoteInput): SolutionResponse!
}

type Subscription {
    problemAdded: Problem!
    solutionAdded: Solution!
    solutionVoteChanged(solutionId: ID!): Solution!
}